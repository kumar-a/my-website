<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Abhishek Kumar</title>
    <link>https://akumar.netlify.app/category/r/</link>
      <atom:link href="https://akumar.netlify.app/category/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2022 Abhishek Kumar</copyright><lastBuildDate>Sat, 05 Feb 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://akumar.netlify.app/media/icon_hu63af8eaec43cac92558e0334cb2dff24_36198_512x512_fill_lanczos_center_3.png</url>
      <title>R</title>
      <link>https://akumar.netlify.app/category/r/</link>
    </image>
    
    <item>
      <title>Meta-analytic models in Ecology</title>
      <link>https://akumar.netlify.app/post/meta-analytic-models-in-ecology/</link>
      <pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://akumar.netlify.app/post/meta-analytic-models-in-ecology/</guid>
      <description>
&lt;script src=&#34;https://akumar.netlify.app/post/meta-analytic-models-in-ecology/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;The overall aim of meta-analyses is to combine the effects or observations from different studies. There are three main types of meta-analytic models i.e., fixed-effect model (FEM), random-effects model (REM), and multilevel model (MLM), which are commonly used to compute the overall effect estimate in meta-analysis. Multilevel meta-analytic models account for non-independence due to studies, species and phylogenetic relatedness between species, which is common for ecological meta-analyses.&lt;/p&gt;
&lt;div id=&#34;fixed-effects-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Fixed-effects model&lt;/h2&gt;
&lt;p&gt;The most basic fixed-effect or common-effect model can be mathematically expressed as Equation &lt;a href=&#34;#eq:mod1&#34;&gt;(1)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34; id=&#34;eq:mod1&#34;&gt;\[\begin{equation}
y_i = \mu + e_i; \quad 
\textbf{e} \sim \mathcal{N}(0, \textbf{V})
\tag{1}
\end{equation}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where, &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt; is the effect size for the &lt;span class=&#34;math inline&#34;&gt;\(i^{th}\)&lt;/span&gt; study (with &lt;span class=&#34;math inline&#34;&gt;\(i = 1, \ldots, N_{studies}\)&lt;/span&gt;) with corresponding sampling variance &lt;span class=&#34;math inline&#34;&gt;\(v_i\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; is the overall meta-analytic mean, &lt;span class=&#34;math inline&#34;&gt;\(e_i\)&lt;/span&gt; is the sampling error for the &lt;span class=&#34;math inline&#34;&gt;\(i^{th}\)&lt;/span&gt; study, &lt;span class=&#34;math inline&#34;&gt;\(\textbf{e}\)&lt;/span&gt; is a &lt;span class=&#34;math inline&#34;&gt;\(1 \times N_{studies}\)&lt;/span&gt; column vector with the &lt;span class=&#34;math inline&#34;&gt;\(e_i\)&lt;/span&gt; values (which are assumed to be normally distributed with mean &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; and variance &lt;span class=&#34;math inline&#34;&gt;\(v_i\)&lt;/span&gt;), &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; is a column vector of zeros and &lt;span class=&#34;math inline&#34;&gt;\(\textbf{V}\)&lt;/span&gt; is an &lt;span class=&#34;math inline&#34;&gt;\(N_{studies} \times N_{studies}\)&lt;/span&gt; matrix with the &lt;span class=&#34;math inline&#34;&gt;\(v_i\)&lt;/span&gt; values along the diagonal. However, this model is overly simplistic as it assumes homogeneity between studies which is far from the reality, at least for ecological studies.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;random-effects-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Random-effects model&lt;/h2&gt;
&lt;p&gt;In contrary to the fixed effect model, the assumptions of random-effects model are more realistic as it considers between-study heterogeneity. This model assumes that there is not only one actual effect size but a distribution of true effect sizes. According to this model, the observed effect size &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt; deviates from the mean true effect size &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; for a single study &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; (with &lt;span class=&#34;math inline&#34;&gt;\(i = 1, \ldots , N_{studies}\)&lt;/span&gt;) by two error terms &lt;span class=&#34;math inline&#34;&gt;\(u_i\)&lt;/span&gt; (between-study heterogeneity) and &lt;span class=&#34;math inline&#34;&gt;\(e_i\)&lt;/span&gt; (sampling error). Thus, the random effects model can be expressed as Equation &lt;a href=&#34;#eq:mod2&#34;&gt;(2)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34; id=&#34;eq:mod2&#34;&gt;\[\begin{equation}
y_i = \mu + u_i + e_i; \quad 
\textbf{u} \sim \mathcal{N}(0, \sigma_u^2 \textbf{I}_u)
\tag{2}
\end{equation}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where, &lt;span class=&#34;math inline&#34;&gt;\(u_i\)&lt;/span&gt; is the random effect corresponding to the &lt;span class=&#34;math inline&#34;&gt;\(i^{th}\)&lt;/span&gt; estimate, &lt;span class=&#34;math inline&#34;&gt;\(\textbf{u}\)&lt;/span&gt; is a &lt;span class=&#34;math inline&#34;&gt;\(1 \times N_{studies}\)&lt;/span&gt; column vector with the &lt;span class=&#34;math inline&#34;&gt;\(u_i\)&lt;/span&gt; values (which are assumed to be normally distributed with mean &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; and variance &lt;span class=&#34;math inline&#34;&gt;\(\sigma_u^2\)&lt;/span&gt;) and &lt;span class=&#34;math inline&#34;&gt;\(\textbf{I}_u\)&lt;/span&gt; is an &lt;span class=&#34;math inline&#34;&gt;\(N_{studies} \times N_{studies}\)&lt;/span&gt; identity matrix.&lt;/p&gt;
&lt;p&gt;Although the random-effects model is commonly used in ecology, it did not take into consideration the non-independence among effect sizes. The non-independence can arise when the effect sizes are shared by studies or species (i.e., multiple effect sizes from the same study or species). Further, phylogenetic relatedness among species can also introduce non-independence among the effect size estimates. This issue of non-independence can be addressed by using a multilevel (hierarchical) meta-analytic model, which considers a random effect at each level of variability in effect sizes. Among the several factor for non-independence of effect sizes, the dependence due to studies, species and phylogenetic relatedness among species are common in ecology.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;random-effects-model-at-study-level&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Random-effects model at study level&lt;/h2&gt;
&lt;p&gt;When a study provides more than one effect sizes, we have random effects at effect size (within studies) and study levels (between-study). To consider such non-independence due to studies, a multilevel model can be mathematically expressed as Equation &lt;a href=&#34;#eq:mod3&#34;&gt;(3)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34; id=&#34;eq:mod3&#34;&gt;\[\begin{equation}
y_{ij} = \mu + u_{ij} + s_i + e_{ij}; \quad 
\textbf{s} \sim \mathcal{N}(0, \sigma_s^2 \textbf{I}_s) 
\tag{3}
\end{equation}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where, &lt;span class=&#34;math inline&#34;&gt;\(y_{ij}\)&lt;/span&gt; denotes the &lt;span class=&#34;math inline&#34;&gt;\(j^{th}\)&lt;/span&gt; effect in the &lt;span class=&#34;math inline&#34;&gt;\(i^{th}\)&lt;/span&gt; study (with &lt;span class=&#34;math inline&#34;&gt;\(j = 1, \ldots, N_i\)&lt;/span&gt;, where &lt;span class=&#34;math inline&#34;&gt;\(N_i\)&lt;/span&gt; is the number of effect sizes reported in the &lt;span class=&#34;math inline&#34;&gt;\(i^{th}\)&lt;/span&gt; study), &lt;span class=&#34;math inline&#34;&gt;\(v_{ij}\)&lt;/span&gt; are the corresponding sampling variances, and &lt;span class=&#34;math inline&#34;&gt;\(N_{total} = \sum_{i = 1}^{N_{studies}} N_i\)&lt;/span&gt; represents the total number of the effect sizes, &lt;span class=&#34;math inline&#34;&gt;\(u_{ij}\)&lt;/span&gt; is a random effect corresponding to the &lt;span class=&#34;math inline&#34;&gt;\(j^{th}\)&lt;/span&gt; effect size in the &lt;span class=&#34;math inline&#34;&gt;\(i^{th}\)&lt;/span&gt; study, &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; is a random effect at the study level, &lt;span class=&#34;math inline&#34;&gt;\(\textbf{u}\)&lt;/span&gt; is now a &lt;span class=&#34;math inline&#34;&gt;\(1 \times N_{total}\)&lt;/span&gt; column vector with the &lt;span class=&#34;math inline&#34;&gt;\(u_{ij}\)&lt;/span&gt; values, &lt;span class=&#34;math inline&#34;&gt;\(\textbf{s}\)&lt;/span&gt; is a &lt;span class=&#34;math inline&#34;&gt;\(1 \times N_{studies}\)&lt;/span&gt; column vector with the &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; values (which are assumed to be normally distributed with mean &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; and variance &lt;span class=&#34;math inline&#34;&gt;\(\sigma_s^2\)&lt;/span&gt;), and &lt;span class=&#34;math inline&#34;&gt;\(\textbf{I}_u\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\textbf{I}_s\)&lt;/span&gt; are &lt;span class=&#34;math inline&#34;&gt;\(N_{total} \times N_{total}\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(N_{studies} \times N_{studies}\)&lt;/span&gt; identity matrices, respectively.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;random-effects-model-at-species-level&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Random-effects model at species level&lt;/h2&gt;
&lt;p&gt;However, the above model in Equation &lt;a href=&#34;#eq:mod3&#34;&gt;(3)&lt;/a&gt; did not considers non-independence due to species, which is prevalent in ecology and evolution. If effect sizes belong to different species, we can denote &lt;span class=&#34;math inline&#34;&gt;\(y_{ijk}\)&lt;/span&gt; as the &lt;span class=&#34;math inline&#34;&gt;\(j^{th}\)&lt;/span&gt; effect in the &lt;span class=&#34;math inline&#34;&gt;\(i^{th}\)&lt;/span&gt; study for the &lt;span class=&#34;math inline&#34;&gt;\(k^{th}\)&lt;/span&gt; species (with &lt;span class=&#34;math inline&#34;&gt;\(k = 1, \ldots, N_{species}\)&lt;/span&gt;). Then the multilevel model can include random effects at species level as expressed in Equation &lt;a href=&#34;#eq:mod4&#34;&gt;(4)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34; id=&#34;eq:mod4&#34;&gt;\[\begin{equation}
y_{ijk} = \mu + u_{ij} + s_i + n_k + e_{ij}; \quad 
\textbf{n} \sim \mathcal{N}(0, \sigma_n^2 \textbf{I}_n)
\tag{4}
\end{equation}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where, &lt;span class=&#34;math inline&#34;&gt;\(n_k\)&lt;/span&gt; is a species-specific random effect, &lt;span class=&#34;math inline&#34;&gt;\(\textbf{n}\)&lt;/span&gt; is a &lt;span class=&#34;math inline&#34;&gt;\(1 \times N_{species}\)&lt;/span&gt; column vector with the &lt;span class=&#34;math inline&#34;&gt;\(n_k\)&lt;/span&gt; values (which are assumed to be normally distributed with mean &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; and between-species variance &lt;span class=&#34;math inline&#34;&gt;\(\sigma_n^2\)&lt;/span&gt;) and &lt;span class=&#34;math inline&#34;&gt;\(\textbf{I}_n\)&lt;/span&gt; has dimensions &lt;span class=&#34;math inline&#34;&gt;\(N_{species} Ã N_{species}\)&lt;/span&gt;. In Equation &lt;a href=&#34;#eq:mod4&#34;&gt;(4)&lt;/a&gt;, &lt;span class=&#34;math inline&#34;&gt;\(n_k\)&lt;/span&gt; is considered as crossed random effect instead of nested random effect.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;random-effects-model-at-phylogenetic-relatedness-level&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Random-effects model at phylogenetic relatedness level&lt;/h2&gt;
&lt;p&gt;To account for non-independence due to phylogenetic relatedness, the multilevel model can be extended as Equation &lt;a href=&#34;#eq:mod5&#34;&gt;(5)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34; id=&#34;eq:mod5&#34;&gt;\[\begin{equation}
y_{ijk} = \mu + u_{ij} + s_i + n_k + p_k + e_{ij}; \quad
\textbf{p} \sim \mathcal{N}(0, \sigma_p^2 \textbf{A}) 
\tag{5}
\end{equation}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where, &lt;span class=&#34;math inline&#34;&gt;\(p_k\)&lt;/span&gt; denotes the phylogenetic random effect for the &lt;span class=&#34;math inline&#34;&gt;\(k^{th}\)&lt;/span&gt; species,
&lt;span class=&#34;math inline&#34;&gt;\(\textbf{p}\)&lt;/span&gt; is a &lt;span class=&#34;math inline&#34;&gt;\(1 \times N_{species}\)&lt;/span&gt; column vector with the &lt;span class=&#34;math inline&#34;&gt;\(p_k\)&lt;/span&gt; values (which are assumed to follow a multivariate normal distribution with mean &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; and varianceâcovariance matrix &lt;span class=&#34;math inline&#34;&gt;\(\sigma_p^2 \textbf{A}\)&lt;/span&gt;, where &lt;span class=&#34;math inline&#34;&gt;\(\sigma_p^2\)&lt;/span&gt; denotes between-species variance due to the phylogeny, and &lt;span class=&#34;math inline&#34;&gt;\(\textbf{A}\)&lt;/span&gt; is the &lt;span class=&#34;math inline&#34;&gt;\(N_{species} \times N_{species}\)&lt;/span&gt; phylogenetic correlation matrix).&lt;/p&gt;
&lt;p&gt;The model in Equation &lt;a href=&#34;#eq:mod5&#34;&gt;(5)&lt;/a&gt; includes both non-phylogenetic (&lt;span class=&#34;math inline&#34;&gt;\(n_k\)&lt;/span&gt;) and phylogenetic(&lt;span class=&#34;math inline&#34;&gt;\(p_k\)&lt;/span&gt;) random effect due to species. Concerning the potential bias in estimated variances, we can simplify this model by removing the non-phylogenetic random effects as represented in Equation &lt;a href=&#34;#eq:mod6&#34;&gt;(6)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34; id=&#34;eq:mod6&#34;&gt;\[\begin{equation}
y_{ijk} = \mu + u_{ij} + s_i + p_k + e_{ij}; \quad
\textbf{p} \sim \mathcal{N}(0, \sigma_p^2 \textbf{A})
\tag{6}
\end{equation}\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Protected Areas in Siwaliks of north-west India</title>
      <link>https://akumar.netlify.app/post/protected-areas-in-siwaliks/</link>
      <pubDate>Wed, 29 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://akumar.netlify.app/post/protected-areas-in-siwaliks/</guid>
      <description>
&lt;script src=&#34;https://akumar.netlify.app/post/protected-areas-in-siwaliks/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;yzakrqusrg&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#yzakrqusrg .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: 100%;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 0px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#yzakrqusrg .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#yzakrqusrg .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#yzakrqusrg .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#yzakrqusrg .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#yzakrqusrg .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #000000;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#yzakrqusrg .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#yzakrqusrg .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#yzakrqusrg .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#yzakrqusrg .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#yzakrqusrg .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#yzakrqusrg .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#yzakrqusrg .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#yzakrqusrg .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#yzakrqusrg .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#yzakrqusrg .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#yzakrqusrg .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#yzakrqusrg .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#yzakrqusrg .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#yzakrqusrg .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#yzakrqusrg .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#yzakrqusrg .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#yzakrqusrg .gt_table_body {
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: #000000;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #000000;
}

#yzakrqusrg .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#yzakrqusrg .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#yzakrqusrg .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#yzakrqusrg .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#yzakrqusrg .gt_left {
  text-align: left;
}

#yzakrqusrg .gt_center {
  text-align: center;
}

#yzakrqusrg .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#yzakrqusrg .gt_font_normal {
  font-weight: normal;
}

#yzakrqusrg .gt_font_bold {
  font-weight: bold;
}

#yzakrqusrg .gt_font_italic {
  font-style: italic;
}

#yzakrqusrg .gt_super {
  font-size: 65%;
}

#yzakrqusrg .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;State/UT&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Name&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Type&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Year&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Area (km&lt;sup&gt;2&lt;/sup&gt;)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Chandigarh&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Sukhna Lake&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1986&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;25.98&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Haryana&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Kalesar&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;NP&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2003&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;46.82&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Haryana&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Bir Shikargah&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1987&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;7.67&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Haryana&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Kalesar&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1996&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;54.36&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Haryana&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Khol Hi Raitan&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2004&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;48.83&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Himachal Pradesh&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Simbalbara&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;NP&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2010&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;27.88&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Himachal Pradesh&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Gobind Sagar&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1962&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;100.34&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Himachal Pradesh&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Pong Dam Lake&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1982&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;207.59&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Himachal Pradesh&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Shilli&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ConR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2013&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.49&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Himachal Pradesh&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Shri Naina Devi&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ConR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2013&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;17.01&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Jammu and Kashmir&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Jasrota&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1987&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;10.04&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Jammu and Kashmir&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Nandni&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1981&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;33.34&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Jammu and Kashmir&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Ramnagar Rakha&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1981&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;31.50&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Jammu and Kashmir&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Surinsar Mansar&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1981&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;97.82&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Jammu and Kashmir&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Trikuta&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1981&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;31.77&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Jammu and Kashmir&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Bahu&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ConR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2008&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;19.75&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Jammu and Kashmir&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Gharana Wetland&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ConR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2008&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;0.75&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Jammu and Kashmir&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Kukarian Wetland&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ConR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2008&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;24.25&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Jammu and Kashmir&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Nanga Wetland&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ConR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2008&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;15.25&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Jammu and Kashmir&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Pargwal Wetland&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ConR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2008&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;49.25&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Jammu and Kashmir&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Sangral-Asachak Wetland&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ConR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2008&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;7.00&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Jammu and Kashmir&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Thein Wetland&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ConR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2008&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;18.90&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Punjab&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Jhajjar Bacholi&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1998&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1.16&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Punjab&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Takhni-Rehampur&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1992&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3.82&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Punjab&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Nangal&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2009&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2.90&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Punjab&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Ranjit Sagar&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ConR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2017&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;18.65&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Punjab&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Ropar Wetland&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ConR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2017&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2.11&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Punjab&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Lalwan&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ComR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2007&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;12.67&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Punjab&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Siswan&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ComR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2017&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;12.95&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Uttarakhand&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Corbett&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;NP&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1936&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;520.82&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Uttarakhand&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Rajaji&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;NP&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1983&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;820.00&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Uttarakhand&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Nandhaur&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2012&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;269.96&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Uttarakhand&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Sonanadi&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;WLS&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1987&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;301.18&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Uttarakhand&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Jhilmil Jheel&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ConR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2005&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;37.84&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_left&#34;&gt;Uttarakhand&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Pawalgarh&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;ConR&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2012&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;58.25&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;&lt;strong&gt;References:&lt;/strong&gt; &lt;br&gt;
Gosh-Harihar et al (&lt;a href=&#34;https://doi.org/10.1016/j.biocon.2019.06.024&#34;&gt;2019&lt;/a&gt;);
Sivakumar et al (&lt;a href=&#34;http://environmentportal.in/files/Shivalik.pdf&#34;&gt;2010&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;&lt;strong&gt;Websites:&lt;/strong&gt; &lt;br&gt;
Protected Areas: &lt;a href=&#34;http://www.wiienvis.nic.in/Database/Protected_Area_854.aspx&#34;&gt;http://www.wiienvis.nic.in/Database/Protected_Area_854.aspx&lt;/a&gt; &lt;br&gt;
National Parks: &lt;a href=&#34;http://wiienvis.nic.in/Database/npa_8231.aspx&#34;&gt;http://wiienvis.nic.in/Database/npa_8231.aspx&lt;/a&gt; &lt;br&gt;
Wildlife Sanctuaries: &lt;a href=&#34;http://wiienvis.nic.in/Database/wls_8230.aspx&#34;&gt;http://wiienvis.nic.in/Database/wls_8230.aspx&lt;/a&gt; &lt;br&gt;
Conservation Reserves: &lt;a href=&#34;http://wiienvis.nic.in/Database/cri_8229.aspx&#34;&gt;http://wiienvis.nic.in/Database/cri_8229.aspx&lt;/a&gt; &lt;br&gt;
Community Reserves: &lt;a href=&#34;http://wiienvis.nic.in/Database/cri_8228.aspx&#34;&gt;http://wiienvis.nic.in/Database/cri_8228.aspx&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Making maps in R</title>
      <link>https://akumar.netlify.app/post/making-maps-in-r/</link>
      <pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://akumar.netlify.app/post/making-maps-in-r/</guid>
      <description>
&lt;script src=&#34;https://akumar.netlify.app/post/making-maps-in-r/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;load-the-required-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;load the required packages&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)       # general data wrangling
library(raster)      # raster data
library(sf)          # spatial data handling
library(tmap)        # thematic mapping&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;download-and-prepare-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;download and prepare the data&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## extract boundaries and data from OpenStreetMap
library(osmdata)

## define a bounding box for area of interest
osm_bbox &amp;lt;- c(76.8079, 30.6636, 77.5173, 31.0125) # xmin, ymin, xmax, ymax

## extract boundary of the protected area as sf from OpenStreetMap (osm)
protected_areas &amp;lt;- opq(osm_bbox) |&amp;gt;
  add_osm_feature(key = &amp;quot;boundary&amp;quot;, value = &amp;quot;protected_area&amp;quot;, value_exact = F) |&amp;gt;
  osmdata_sf()

## rename protected areas to short names and save to local file as gpkg
protected_areas$osm_polygons |&amp;gt; select(name, geometry) |&amp;gt;
  mutate(short_name = c(&amp;quot;CL&amp;quot;, &amp;quot;CD&amp;quot;, &amp;quot;MH&amp;quot;, &amp;quot;BS&amp;quot;, &amp;quot;SL&amp;quot;)) |&amp;gt;
  st_write(&amp;quot;data/protected_areas.gpkg&amp;quot;)

## extract rivers / streams (waterways) from osm as sf
waterways &amp;lt;- opq(osm_bbox) |&amp;gt; add_osm_feature(key = &amp;quot;waterway&amp;quot;) |&amp;gt; 
  osmdata_sf()

## save waterways to local file as gpkg
waterways$osm_lines |&amp;gt; select(name, waterway, geometry) |&amp;gt; 
  st_write(&amp;quot;data/waterways.gpkg&amp;quot;)

## extract roadways (highway) major roads from osm as sf
highways &amp;lt;- opq(osm_bbox) |&amp;gt; add_osm_feature(key = &amp;quot;highway&amp;quot;) |&amp;gt; 
  osmdata_sf()

## save roadways to local file as gpkg
highways$osm_lines |&amp;gt; select(name, highway, geometry) |&amp;gt; 
  st_write(&amp;quot;data/highways.gpkg&amp;quot;)

## load, merge, and crop pre-downloaded SRTM 30 m elevation data 
elev &amp;lt;- raster(&amp;quot;D:/spatial-data/dem/n30_e076_1arc_v3.tif&amp;quot;) |&amp;gt;
    merge(raster(&amp;quot;D:/spatial-data/dem/n30_e077_1arc_v3.tif&amp;quot;)) |&amp;gt; 
    merge(raster(&amp;quot;D:/spatial-data/dem/n31_e076_1arc_v3.tif&amp;quot;)) |&amp;gt; 
    merge(raster(&amp;quot;D:/spatial-data/dem/n31_e077_1arc_v3.tif&amp;quot;)) |&amp;gt; 
    crop(extent(76.8079, 77.5173, 30.6636, 31.0125))

## prepare and save hillshade
hillShade(
    # extract slope from elevation
    slope = terrain(elev, opt= &amp;quot;slope&amp;quot;),
    
    # extract aspect from elevation
    aspect = terrain(elev, opt= &amp;quot;aspect&amp;quot;), 
    
    # 45 altitude angle and 315 azimuth angle
    angle = 45, direction = 315) |&amp;gt; 
    writeRaster(&amp;quot;data/hill_shade.tif&amp;quot;)

## remove all files from environment
rm(list = ls())&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;load-the-prepared-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;load the prepared data&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&#34;plot-the-map&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;plot the map&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## add hillshade
tm_shape(hill_shade) + 
  tm_raster(palette = &amp;quot;-Greys&amp;quot;, n = 100, style = &amp;quot;cont&amp;quot;, legend.show = FALSE) +
  
  # add graticule
  tm_graticules(lwd = 1.5, col = &amp;quot;grey75&amp;quot;, labels.size = 0.85) + 
  
  # add protected areas
  tm_shape(protected_areas) + tm_fill(col = &amp;quot;green2&amp;quot;, alpha = 0.4) +  
  tm_borders(col = &amp;quot;seagreen&amp;quot;) +
    
    ## add rivers and streams
    tm_shape(rivers) + tm_lines(col = &amp;quot;dodgerblue&amp;quot;, lwd = 2) +
    tm_shape(streams) + tm_lines(col = &amp;quot;deepskyblue&amp;quot;, lwd = 1) +
  
    ## add major roads
    tm_shape(tertiary_roads) + tm_lines(col = &amp;quot;white&amp;quot;, lwd = 0.5) +
    tm_shape(secondary_roads) + tm_lines(col = &amp;quot;white&amp;quot;, lwd = 1) +
    tm_shape(trunk_roads) + tm_lines(col = &amp;quot;white&amp;quot;, lwd = 2) +
    
  ## add legend
  tm_add_legend(type = &amp;quot;fill&amp;quot;, labels = &amp;quot;Protected area&amp;quot;, col = &amp;quot;green2&amp;quot;,
                alpha = 0.4, border.col = &amp;quot;seagreen&amp;quot;) +
    tm_add_legend(type = &amp;quot;line&amp;quot;, labels = &amp;quot;Roads&amp;quot;, col = &amp;quot;white&amp;quot;, 
                lwd = 2) +
  tm_add_legend(type = &amp;quot;line&amp;quot;, labels = &amp;quot;Rivers&amp;quot;, col = &amp;quot;skyblue&amp;quot;, lwd = 2) +
    
    
  ## add compass and scale bar
    tm_compass(position = c(0.89, 0.8), size = 2.5, bg.color = &amp;quot;grey90&amp;quot;, 
               bg.alpha = 0.7) +
    tm_scale_bar(position = c(0.6, 0.01), breaks = c(0, 10, 20), text.size = 0.75,
                 bg.color = &amp;quot;grey90&amp;quot;, bg.alpha = 0.7) +
    
  ## adjust layout
    tm_layout(frame.double.line = T, compass.type = &amp;quot;arrow&amp;quot;, 
            legend.position = c(0.015, 0.7), legend.bg.color = &amp;quot;grey90&amp;quot;, 
            legend.bg.alpha = 0.7, 
            main.title.position = &amp;quot;center&amp;quot;,
            legend.text.size = 0.85) &lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span style=&#34;display:block;&#34; id=&#34;fig:fig1&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://akumar.netlify.app/post/making-maps-in-r/index_files/figure-html/fig1-1.png&#34; alt=&#34;Location and topography of selected protected areas. The map is prepared in `R` programming environment using the package `tmap`&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Location and topography of selected protected areas. The map is prepared in &lt;code&gt;R&lt;/code&gt; programming environment using the package &lt;code&gt;tmap&lt;/code&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## remove all variables from the environment
rm(list = ls())&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Plotting rasters in R</title>
      <link>https://akumar.netlify.app/post/plotting-rasters-in-r/</link>
      <pubDate>Sun, 24 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://akumar.netlify.app/post/plotting-rasters-in-r/</guid>
      <description>
&lt;script src=&#34;https://akumar.netlify.app/post/plotting-rasters-in-r/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;load-required-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;load required packages&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(raster)      # raster data
library(rasterVis)   # raster data visualisation
library(rgee)        # Google Earth Engine in R
library(sf)          # spatial data handling
library(tidyverse)   # general data wrangling and visualisation&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;getting-landcover-data-from-google-earth-engine&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting Landcover data from Google Earth Engine&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## load the package rgee
library(rgee)

## initialize google earth engine in R
ee_Initialize(drive = T)

## define a region of interest
roi &amp;lt;- ee$Geometry$Rectangle(76.8100, 30.6676, 77.0010, 30.8084)

## load and clip ESA WorldCover 2020 data
landcover2020 &amp;lt;- ee$ImageCollection(&amp;quot;ESA/WorldCover/v100&amp;quot;)$
  # select the first image
  first()$
  # clip to region of interest
  clip(roi)

## Move results from Earth Engine to Drive
task_img &amp;lt;- ee_image_to_drive(
  image = landcover2020,
  folder = &amp;quot;rgee_backup&amp;quot;,
  fileFormat = &amp;quot;GEO_TIFF&amp;quot;,
  region = roi,
  fileNamePrefix = &amp;quot;landcover_2020&amp;quot;
)

task_img$start()
ee_monitoring(task_img)

## Move results from Drive to local
img &amp;lt;- ee_drive_to_local(task = task_img, dsn = &amp;quot;data/lc2020.tif&amp;quot;)

## deauthorise google drive
googledrive::drive_deauth()

## remove all variables from environment
rm(list = ls())&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;base-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;base R&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mwls_lc &amp;lt;- raster(&amp;quot;data/lc2020.tif&amp;quot;)
plot(mwls_lc)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://akumar.netlify.app/post/plotting-rasters-in-r/index_files/figure-html/unnamed-chunk-2-1.svg&#34; width=&#34;90%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;https://akumar.netlify.app/post/plotting-rasters-in-r/index_files/figure-html/unnamed-chunk-2-2.svg&#34; width=&#34;90%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lattice-levelplot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;lattice levelplot&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(raster)
library(rasterVis)

## data from ESA WorldCover 2020 
mwls_lc &amp;lt;- raster(&amp;quot;data/lc2020.tif&amp;quot;)

levels(mwls_lc) &amp;lt;- data.frame(
    ID = c(seq(10, 60, 10), 80),
    landcover = c(&amp;quot;Trees&amp;quot;, &amp;quot;Shrubland&amp;quot;, &amp;quot;Grassland&amp;quot;, &amp;quot;Cropland&amp;quot;, &amp;quot;Built-up&amp;quot;, 
             &amp;quot;Barren/Sparse \n Vegetation&amp;quot;, &amp;quot;Open water&amp;quot;)
    )

levelplot(mwls_lc, att=&amp;#39;landcover&amp;#39;,
          col.regions = c(&amp;quot;#006400&amp;quot;, &amp;quot;#FFBB22&amp;quot;, &amp;quot;#FFFF4C&amp;quot;, &amp;quot;#F096FF&amp;quot;, &amp;quot;#FA0000&amp;quot;, 
                          &amp;quot;#B4B4B4&amp;quot;, &amp;quot;#0064C8&amp;quot;),
          colorkey = list(height = 1, labels = list(cex = 1.2)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://akumar.netlify.app/post/plotting-rasters-in-r/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;90%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;ggplot&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;
## data from ESA WorldCover 2020 
mwls_lc &amp;lt;- raster(&amp;quot;data/lc2020.tif&amp;quot;)

## a function to convert raster to dataframe
rasterdf &amp;lt;- function(x, aggregate = 1){
    resampleFactor &amp;lt;- aggregate
    inputRaster &amp;lt;- x    
    inCols &amp;lt;- ncol(inputRaster)
    inRows &amp;lt;- nrow(inputRaster)
    
    # Compute numbers of columns and rows in the new raster for mapping
    resampledRaster &amp;lt;- raster(ncol = (inCols / resampleFactor),
                              nrow = (inRows / resampleFactor))
    
    # Match to the extent of the original raster
    extent(resampledRaster) &amp;lt;- extent(inputRaster)
   
    # Resample data on the new raster
    y &amp;lt;- resample(inputRaster, resampledRaster, method=&amp;#39;ngb&amp;#39;)
   
    # Extract cell coordinates  
    coords &amp;lt;- xyFromCell(y, seq_len(ncell(y)))
    dat &amp;lt;- stack(as.data.frame(getValues(y)))
    
    # Add names - &amp;#39;value&amp;#39; for data, &amp;#39;variable&amp;#39; to indicate different raster layers
    # in a stack
    names(dat) &amp;lt;- c(&amp;#39;value&amp;#39;, &amp;#39;variable&amp;#39;)
    dat &amp;lt;- cbind(coords, dat)
    dat
}

## convert raster to data frame
mwls_df &amp;lt;- rasterdf(mwls_lc)

## prepare legend
LCcodes &amp;lt;- c(seq(10, 90, 10), 95, 100)
LCnames &amp;lt;- c(&amp;quot;Trees&amp;quot;, &amp;quot;Shrubland&amp;quot;, &amp;quot;Grassland&amp;quot;, &amp;quot;Cropland&amp;quot;, &amp;quot;Built-up&amp;quot;, 
             &amp;quot;Barren/Sparse Vegetation&amp;quot;, &amp;quot;Snow and Ice&amp;quot;, &amp;quot;Open water&amp;quot;,
             &amp;quot;Herbaceous wetland&amp;quot;, &amp;quot;Mangroves&amp;quot;, &amp;quot;Moss and lichen&amp;quot;)
LCcolors &amp;lt;- attr(mwls_lc, &amp;quot;legend&amp;quot;)@colortable[LCcodes + 1]
names(LCcolors) &amp;lt;- as.character(LCcodes)

## plot the map
ggplot(data = mwls_df) +
  geom_raster(aes(x = x, y = y, fill = as.character(value))) + 
  scale_fill_manual(name = &amp;quot;Land cover&amp;quot;,
                    values = LCcolors[-c(7, 9:11)],
                    labels = LCnames[-c(7, 9:11)],
                    na.translate = FALSE) +
  coord_sf(expand = F) +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.background = element_rect(fill = &amp;quot;white&amp;quot;, color = &amp;quot;black&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://akumar.netlify.app/post/plotting-rasters-in-r/index_files/figure-html/lc-1.svg&#34; width=&#34;90%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;
## remove all variables from the environment
rm(list = ls())&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Google Earth Engine in R</title>
      <link>https://akumar.netlify.app/post/google-earth-engine-in-r/</link>
      <pubDate>Sat, 16 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://akumar.netlify.app/post/google-earth-engine-in-r/</guid>
      <description>
&lt;script src=&#34;https://akumar.netlify.app/post/google-earth-engine-in-r/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://akumar.netlify.app/post/google-earth-engine-in-r/index.en_files/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://akumar.netlify.app/post/google-earth-engine-in-r/index.en_files/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://akumar.netlify.app/post/google-earth-engine-in-r/index.en_files/leaflet/leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://akumar.netlify.app/post/google-earth-engine-in-r/index.en_files/leaflet/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://akumar.netlify.app/post/google-earth-engine-in-r/index.en_files/leafletfix/leafletfix.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://akumar.netlify.app/post/google-earth-engine-in-r/index.en_files/proj4/proj4.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://akumar.netlify.app/post/google-earth-engine-in-r/index.en_files/Proj4Leaflet/proj4leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://akumar.netlify.app/post/google-earth-engine-in-r/index.en_files/rstudio_leaflet/rstudio_leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://akumar.netlify.app/post/google-earth-engine-in-r/index.en_files/leaflet-binding/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://akumar.netlify.app/post/google-earth-engine-in-r/index.en_files/leaflet-providers/leaflet-providers_1.9.0.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://akumar.netlify.app/post/google-earth-engine-in-r/index.en_files/leaflet-providers-plugin/leaflet-providers-plugin.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://akumar.netlify.app/post/google-earth-engine-in-r/index.en_files/clipboard/setClipboardText.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Google Earth Engine (GEE) is a cloud-based platform for planetary-scale geo-spatial analysis &lt;span class=&#34;citation&#34;&gt;(&lt;a href=&#34;#ref-Gorelick2017&#34; role=&#34;doc-biblioref&#34;&gt;Gorelick et al. 2017&lt;/a&gt;)&lt;/span&gt;. The cloud-based computation ability overcomes the limitations of data access, data storage, personal limited computation ability and time. Thus, it provides a platform for large scale analysis of earth observations through access to satellite imagery.&lt;/p&gt;
&lt;p&gt;Google offered support only for Python and JavaScript, and GEE was not accessible to &lt;code&gt;R&lt;/code&gt; &lt;span class=&#34;citation&#34;&gt;(&lt;a href=&#34;#ref-R-base&#34; role=&#34;doc-biblioref&#34;&gt;R Core Team 2021&lt;/a&gt;)&lt;/span&gt; users until Aybar et al. &lt;span class=&#34;citation&#34;&gt;(&lt;a href=&#34;#ref-rgee2020&#34; role=&#34;doc-biblioref&#34;&gt;2020&lt;/a&gt;)&lt;/span&gt; developed &lt;code&gt;rgee&lt;/code&gt; package &lt;span class=&#34;citation&#34;&gt;(&lt;a href=&#34;#ref-R-rgee&#34; role=&#34;doc-biblioref&#34;&gt;Aybar 2021&lt;/a&gt;)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rgee)
ee_Initialize()

#knitr::write_bib(x = c(.packages(), &amp;quot;blogdown&amp;quot;), &amp;quot;packages.bib&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-and-pre-processing&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data and Pre-processing&lt;/h2&gt;
&lt;p&gt;Data Product: &lt;a href=&#34;https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_SR&#34;&gt;Sentinel-2 MSI: MultiSpectral Instrument, Level-2A&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sentinel-2 is a wide-swath, high-resolution, multi-spectral imaging mission supporting Copernicus Land Monitoring studies, including the monitoring of vegetation, soil and water cover, as well as observation of inland waterways and coastal areas. The SENTINEL-2 data contain 13 spectral bands representing TOA reflectance scaled by 10000.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# define a region of interest
roi &amp;lt;- ee$Geometry$Rectangle(76.85, 30.66, 77.01, 30.75)

# load and pre-process sentinel-2 data
# Filter the image collection
img &amp;lt;- ee$ImageCollection(&amp;quot;COPERNICUS/S2_SR&amp;quot;)$
  
  # filter the date range we are interested in
  filterDate(&amp;quot;2020-01-01&amp;quot;, &amp;quot;2020-12-31&amp;quot;)$
  
  # filter geographic area we are interested in 
  filterBounds(roi)$
  
  # filter cloud cover less than 20%
  filter(ee$Filter$lt(&amp;quot;CLOUD_COVERAGE_ASSESSMENT&amp;quot;, 20))$
  
  # filter cloud pixel percentage to less than 20%
  filter(ee$Filter$lt(&amp;quot;CLOUDY_PIXEL_PERCENTAGE&amp;quot;, 20))$
  
  # reduce image collection by taking median value
  median()$
  
  # clip to region of interest
  clip(roi)

# print band names
img$bandNames()$getInfo()
#&amp;gt;  [1] &amp;quot;B1&amp;quot;         &amp;quot;B2&amp;quot;         &amp;quot;B3&amp;quot;         &amp;quot;B4&amp;quot;         &amp;quot;B5&amp;quot;        
#&amp;gt;  [6] &amp;quot;B6&amp;quot;         &amp;quot;B7&amp;quot;         &amp;quot;B8&amp;quot;         &amp;quot;B8A&amp;quot;        &amp;quot;B9&amp;quot;        
#&amp;gt; [11] &amp;quot;B11&amp;quot;        &amp;quot;B12&amp;quot;        &amp;quot;AOT&amp;quot;        &amp;quot;WVP&amp;quot;        &amp;quot;SCL&amp;quot;       
#&amp;gt; [16] &amp;quot;TCI_R&amp;quot;      &amp;quot;TCI_G&amp;quot;      &amp;quot;TCI_B&amp;quot;      &amp;quot;MSK_CLDPRB&amp;quot; &amp;quot;MSK_SNWPRB&amp;quot;
#&amp;gt; [21] &amp;quot;QA10&amp;quot;       &amp;quot;QA20&amp;quot;       &amp;quot;QA60&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;median-true-color-composite&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Median true color composite&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Map$centerObject(roi, 12)
Map$addLayer(img, 
             visParams = list(min = 0, max = 3000, bands = c(&amp;quot;B4&amp;quot;, &amp;quot;B3&amp;quot;, &amp;quot;B2&amp;quot;)),
             name = &amp;quot;true color&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;minZoom&#34;:1,&#34;maxZoom&#34;:52,&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}},&#34;preferCanvas&#34;:false,&#34;bounceAtZoomLimits&#34;:false,&#34;maxBounds&#34;:[[[-90,-370]],[[90,370]]]},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],[],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;addScaleBar&#34;,&#34;args&#34;:[{&#34;maxWidth&#34;:100,&#34;metric&#34;:true,&#34;imperial&#34;:true,&#34;updateWhenIdle&#34;:true,&#34;position&#34;:&#34;bottomleft&#34;}]},{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/eac46edfbc04a1ff9d8cde6cb0206c9d-e0dc566c4b3c761450f90b35e7949c52/tiles/{z}/{x}/{y}&#34;,&#34;true color&#34;,&#34;true color&#34;,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],&#34;true color&#34;,{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;hideGroup&#34;,&#34;args&#34;:[null]}],&#34;setView&#34;:[[30.7050175238026,76.9299999999991],12,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find(&#39;#&#39; + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement(&#39;div&#39;));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass(&#39;lnlt&#39;);\n      newDiv.css({\n      &#39;position&#39;: &#39;relative&#39;,\n      &#39;bottomleft&#39;:  &#39;0px&#39;,\n      &#39;background-color&#39;: &#39;rgba(255, 255, 255, 0.7)&#39;,\n      &#39;box-shadow&#39;: &#39;0 0 2px #bbb&#39;,\n      &#39;background-clip&#39;: &#39;padding-box&#39;,\n      &#39;margin&#39;: &#39;0&#39;,\n      &#39;padding-left&#39;: &#39;5px&#39;,\n      &#39;color&#39;: &#39;#333&#39;,\n      &#39;font&#39;: &#39;9px/1.5 \&#34;Helvetica Neue\&#34;, Arial, Helvetica, sans-serif&#39;,\n      &#39;z-index&#39;: &#39;700&#39;,\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find(&#39;.lnlt&#39;);\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on(&#39;mousemove&#39;, function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                           &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                           &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                           &#39; | zoom: &#39; + map.getZoom() +\n                           &#39; | x: &#39; + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           &#39; | y: &#39; + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           &#39; | epsg: 3857 &#39; +\n                           &#39; | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs &#39;);\n      } else {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on(&#39;mouseout&#39;, function (e) {\n      var strip = document.querySelector(&#39;.lnlt&#39;);\n      if( strip !==null) strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on(&#39;preclick&#39;, function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      var txt = document.querySelector(&#39;.lnlt&#39;).textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText(&#39;\&#34;&#39; + txt + &#39;\&#34;&#39;);\n      }\n      });\n\n      }\n      ).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null},{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el,x,data){\n           var map = this;\n\n           map.on(&#39;keypress&#39;, function(e) {\n               console.log(e.originalEvent.code);\n               var key = e.originalEvent.code;\n               if (key === &#39;KeyE&#39;) {\n                   var bb = this.getBounds();\n                   var txt = JSON.stringify(bb);\n                   console.log(txt);\n\n                   setClipboardText(&#39;\\&#39;&#39; + txt + &#39;\\&#39;&#39;);\n               }\n           })\n        }).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;median-false-color-composite&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Median false color composite&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Map$centerObject(roi, 12)
Map$addLayer(img, 
             visParams = list(min = 0, max = 3000, bands = c(&amp;quot;B8&amp;quot;, &amp;quot;B4&amp;quot;, &amp;quot;B3&amp;quot;)),
             name = &amp;quot;false color&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;minZoom&#34;:1,&#34;maxZoom&#34;:52,&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}},&#34;preferCanvas&#34;:false,&#34;bounceAtZoomLimits&#34;:false,&#34;maxBounds&#34;:[[[-90,-370]],[[90,370]]]},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],[],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;addScaleBar&#34;,&#34;args&#34;:[{&#34;maxWidth&#34;:100,&#34;metric&#34;:true,&#34;imperial&#34;:true,&#34;updateWhenIdle&#34;:true,&#34;position&#34;:&#34;bottomleft&#34;}]},{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/c01b33a0f1c6e0de2acc3922073f6917-692b55a8fab5bce8ff11804e6c2274d9/tiles/{z}/{x}/{y}&#34;,&#34;false color&#34;,&#34;false color&#34;,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],&#34;false color&#34;,{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;hideGroup&#34;,&#34;args&#34;:[null]}],&#34;setView&#34;:[[30.7050175238026,76.9299999999991],12,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find(&#39;#&#39; + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement(&#39;div&#39;));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass(&#39;lnlt&#39;);\n      newDiv.css({\n      &#39;position&#39;: &#39;relative&#39;,\n      &#39;bottomleft&#39;:  &#39;0px&#39;,\n      &#39;background-color&#39;: &#39;rgba(255, 255, 255, 0.7)&#39;,\n      &#39;box-shadow&#39;: &#39;0 0 2px #bbb&#39;,\n      &#39;background-clip&#39;: &#39;padding-box&#39;,\n      &#39;margin&#39;: &#39;0&#39;,\n      &#39;padding-left&#39;: &#39;5px&#39;,\n      &#39;color&#39;: &#39;#333&#39;,\n      &#39;font&#39;: &#39;9px/1.5 \&#34;Helvetica Neue\&#34;, Arial, Helvetica, sans-serif&#39;,\n      &#39;z-index&#39;: &#39;700&#39;,\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find(&#39;.lnlt&#39;);\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on(&#39;mousemove&#39;, function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                           &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                           &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                           &#39; | zoom: &#39; + map.getZoom() +\n                           &#39; | x: &#39; + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           &#39; | y: &#39; + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           &#39; | epsg: 3857 &#39; +\n                           &#39; | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs &#39;);\n      } else {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on(&#39;mouseout&#39;, function (e) {\n      var strip = document.querySelector(&#39;.lnlt&#39;);\n      if( strip !==null) strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on(&#39;preclick&#39;, function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      var txt = document.querySelector(&#39;.lnlt&#39;).textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText(&#39;\&#34;&#39; + txt + &#39;\&#34;&#39;);\n      }\n      });\n\n      }\n      ).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null},{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el,x,data){\n           var map = this;\n\n           map.on(&#39;keypress&#39;, function(e) {\n               console.log(e.originalEvent.code);\n               var key = e.originalEvent.code;\n               if (key === &#39;KeyE&#39;) {\n                   var bb = this.getBounds();\n                   var txt = JSON.stringify(bb);\n                   console.log(txt);\n\n                   setClipboardText(&#39;\\&#39;&#39; + txt + &#39;\\&#39;&#39;);\n               }\n           })\n        }).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;spectral-indices&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Spectral Indices&lt;/h2&gt;
&lt;div id=&#34;vegetation-cover&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Vegetation cover&lt;/h3&gt;
&lt;div id=&#34;ndvi-normalized-difference-vegetation-index&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;NDVI: Normalized Difference Vegetation Index&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# calculate indices e.g. NDVI
ndvi &amp;lt;- img$expression(
  expression = &amp;quot;(NIR - RED)/(NIR + RED)&amp;quot;,
  opt_map = list(&amp;quot;RED&amp;quot; = img$select(&amp;quot;B4&amp;quot;),
                 &amp;quot;NIR&amp;quot; = img$select(&amp;quot;B8&amp;quot;)
                 ))$rename(&amp;quot;ndvi&amp;quot;)

vis_pal &amp;lt;- c(&amp;#39;FFFFFF&amp;#39;, &amp;#39;CE7E45&amp;#39;, &amp;#39;DF923D&amp;#39;, &amp;#39;F1B555&amp;#39;, &amp;#39;FCD163&amp;#39;, &amp;#39;99B718&amp;#39;, 
             &amp;#39;74A901&amp;#39;, &amp;#39;66A000&amp;#39;, &amp;#39;529400&amp;#39;, &amp;#39;3E8601&amp;#39;, &amp;#39;207401&amp;#39;, &amp;#39;056201&amp;#39;,
             &amp;#39;004C00&amp;#39;, &amp;#39;023B01&amp;#39;, &amp;#39;012E01&amp;#39;, &amp;#39;011D01&amp;#39;, &amp;#39;011301&amp;#39;)

Map$centerObject(roi, 12)
Map$addLayer(ndvi, 
             visParams = list(min = 0, max = 1, palette = vis_pal),
             name = &amp;quot;NDVI&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;minZoom&#34;:1,&#34;maxZoom&#34;:52,&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}},&#34;preferCanvas&#34;:false,&#34;bounceAtZoomLimits&#34;:false,&#34;maxBounds&#34;:[[[-90,-370]],[[90,370]]]},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],[],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;addScaleBar&#34;,&#34;args&#34;:[{&#34;maxWidth&#34;:100,&#34;metric&#34;:true,&#34;imperial&#34;:true,&#34;updateWhenIdle&#34;:true,&#34;position&#34;:&#34;bottomleft&#34;}]},{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/c98e621cc066b5edb0e7954b6889a738-5ebf59303821d20408ef3d9c99f7259b/tiles/{z}/{x}/{y}&#34;,&#34;NDVI&#34;,&#34;NDVI&#34;,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],&#34;NDVI&#34;,{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;hideGroup&#34;,&#34;args&#34;:[null]}],&#34;setView&#34;:[[30.7050175238026,76.9299999999991],12,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find(&#39;#&#39; + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement(&#39;div&#39;));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass(&#39;lnlt&#39;);\n      newDiv.css({\n      &#39;position&#39;: &#39;relative&#39;,\n      &#39;bottomleft&#39;:  &#39;0px&#39;,\n      &#39;background-color&#39;: &#39;rgba(255, 255, 255, 0.7)&#39;,\n      &#39;box-shadow&#39;: &#39;0 0 2px #bbb&#39;,\n      &#39;background-clip&#39;: &#39;padding-box&#39;,\n      &#39;margin&#39;: &#39;0&#39;,\n      &#39;padding-left&#39;: &#39;5px&#39;,\n      &#39;color&#39;: &#39;#333&#39;,\n      &#39;font&#39;: &#39;9px/1.5 \&#34;Helvetica Neue\&#34;, Arial, Helvetica, sans-serif&#39;,\n      &#39;z-index&#39;: &#39;700&#39;,\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find(&#39;.lnlt&#39;);\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on(&#39;mousemove&#39;, function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                           &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                           &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                           &#39; | zoom: &#39; + map.getZoom() +\n                           &#39; | x: &#39; + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           &#39; | y: &#39; + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           &#39; | epsg: 3857 &#39; +\n                           &#39; | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs &#39;);\n      } else {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on(&#39;mouseout&#39;, function (e) {\n      var strip = document.querySelector(&#39;.lnlt&#39;);\n      if( strip !==null) strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on(&#39;preclick&#39;, function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      var txt = document.querySelector(&#39;.lnlt&#39;).textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText(&#39;\&#34;&#39; + txt + &#39;\&#34;&#39;);\n      }\n      });\n\n      }\n      ).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null},{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el,x,data){\n           var map = this;\n\n           map.on(&#39;keypress&#39;, function(e) {\n               console.log(e.originalEvent.code);\n               var key = e.originalEvent.code;\n               if (key === &#39;KeyE&#39;) {\n                   var bb = this.getBounds();\n                   var txt = JSON.stringify(bb);\n                   console.log(txt);\n\n                   setClipboardText(&#39;\\&#39;&#39; + txt + &#39;\\&#39;&#39;);\n               }\n           })\n        }).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;ndvire-normalized-difference-vegetation-index-red-edge&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;NDVIre: Normalized Difference Vegetation Index red-edge&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ndvire &amp;lt;- img$expression(
  expression = &amp;quot;(RedEdge1 - RED)/(RedEdge1 + RED)&amp;quot;,
  opt_map = list(&amp;quot;RED&amp;quot; = img$select(&amp;quot;B4&amp;quot;),
                 &amp;quot;RedEdge1&amp;quot; = img$select(&amp;quot;B5&amp;quot;)
                 ))$rename(&amp;quot;ndvire&amp;quot;)

vis_pal &amp;lt;- c(&amp;#39;FFFFFF&amp;#39;, &amp;#39;CE7E45&amp;#39;, &amp;#39;DF923D&amp;#39;, &amp;#39;F1B555&amp;#39;, &amp;#39;FCD163&amp;#39;, &amp;#39;99B718&amp;#39;, 
             &amp;#39;74A901&amp;#39;, &amp;#39;66A000&amp;#39;, &amp;#39;529400&amp;#39;, &amp;#39;3E8601&amp;#39;, &amp;#39;207401&amp;#39;, &amp;#39;056201&amp;#39;,
             &amp;#39;004C00&amp;#39;, &amp;#39;023B01&amp;#39;, &amp;#39;012E01&amp;#39;, &amp;#39;011D01&amp;#39;, &amp;#39;011301&amp;#39;)

Map$centerObject(roi, 12)
Map$addLayer(ndvire, 
             visParams = list(min = 0, max = 1, palette = vis_pal),
             name = &amp;quot;NDVIre&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-4&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-4&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;minZoom&#34;:1,&#34;maxZoom&#34;:52,&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}},&#34;preferCanvas&#34;:false,&#34;bounceAtZoomLimits&#34;:false,&#34;maxBounds&#34;:[[[-90,-370]],[[90,370]]]},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],[],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;addScaleBar&#34;,&#34;args&#34;:[{&#34;maxWidth&#34;:100,&#34;metric&#34;:true,&#34;imperial&#34;:true,&#34;updateWhenIdle&#34;:true,&#34;position&#34;:&#34;bottomleft&#34;}]},{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/8d6c24bd8b5b9cb32a3e978196d36155-40094545c2ee14926955a72d3d82dab1/tiles/{z}/{x}/{y}&#34;,&#34;NDVIre&#34;,&#34;NDVIre&#34;,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],&#34;NDVIre&#34;,{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;hideGroup&#34;,&#34;args&#34;:[null]}],&#34;setView&#34;:[[30.7050175238026,76.9299999999991],12,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find(&#39;#&#39; + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement(&#39;div&#39;));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass(&#39;lnlt&#39;);\n      newDiv.css({\n      &#39;position&#39;: &#39;relative&#39;,\n      &#39;bottomleft&#39;:  &#39;0px&#39;,\n      &#39;background-color&#39;: &#39;rgba(255, 255, 255, 0.7)&#39;,\n      &#39;box-shadow&#39;: &#39;0 0 2px #bbb&#39;,\n      &#39;background-clip&#39;: &#39;padding-box&#39;,\n      &#39;margin&#39;: &#39;0&#39;,\n      &#39;padding-left&#39;: &#39;5px&#39;,\n      &#39;color&#39;: &#39;#333&#39;,\n      &#39;font&#39;: &#39;9px/1.5 \&#34;Helvetica Neue\&#34;, Arial, Helvetica, sans-serif&#39;,\n      &#39;z-index&#39;: &#39;700&#39;,\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find(&#39;.lnlt&#39;);\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on(&#39;mousemove&#39;, function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                           &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                           &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                           &#39; | zoom: &#39; + map.getZoom() +\n                           &#39; | x: &#39; + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           &#39; | y: &#39; + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           &#39; | epsg: 3857 &#39; +\n                           &#39; | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs &#39;);\n      } else {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on(&#39;mouseout&#39;, function (e) {\n      var strip = document.querySelector(&#39;.lnlt&#39;);\n      if( strip !==null) strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on(&#39;preclick&#39;, function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      var txt = document.querySelector(&#39;.lnlt&#39;).textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText(&#39;\&#34;&#39; + txt + &#39;\&#34;&#39;);\n      }\n      });\n\n      }\n      ).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null},{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el,x,data){\n           var map = this;\n\n           map.on(&#39;keypress&#39;, function(e) {\n               console.log(e.originalEvent.code);\n               var key = e.originalEvent.code;\n               if (key === &#39;KeyE&#39;) {\n                   var bb = this.getBounds();\n                   var txt = JSON.stringify(bb);\n                   console.log(txt);\n\n                   setClipboardText(&#39;\\&#39;&#39; + txt + &#39;\\&#39;&#39;);\n               }\n           })\n        }).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;evi-enhanced-vegetation-index&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;EVI: Enhanced vegetation Index&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# calculate EVI
evi &amp;lt;- img$expression(
  expression = &amp;quot;2.5 * ((NIR - RED) / (NIR + 6 * RED - 7.5 * BLUE + 10000))&amp;quot;,
  opt_map = list(&amp;quot;BLUE&amp;quot; = img$select(&amp;quot;B2&amp;quot;),
                 &amp;quot;RED&amp;quot; = img$select(&amp;quot;B4&amp;quot;),
                 &amp;quot;NIR&amp;quot; = img$select(&amp;quot;B8&amp;quot;)
                 ))$rename(&amp;quot;evi&amp;quot;)

Map$centerObject(roi, 12)
Map$addLayer(evi, 
             visParams = list(palette = vis_pal),
             name = &amp;quot;EVI&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-5&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-5&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;minZoom&#34;:1,&#34;maxZoom&#34;:52,&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}},&#34;preferCanvas&#34;:false,&#34;bounceAtZoomLimits&#34;:false,&#34;maxBounds&#34;:[[[-90,-370]],[[90,370]]]},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],[],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;addScaleBar&#34;,&#34;args&#34;:[{&#34;maxWidth&#34;:100,&#34;metric&#34;:true,&#34;imperial&#34;:true,&#34;updateWhenIdle&#34;:true,&#34;position&#34;:&#34;bottomleft&#34;}]},{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/382c57f1905cde7e53345d1b91cf454f-f3bca2b5fd139851ca05c95457226b7d/tiles/{z}/{x}/{y}&#34;,&#34;EVI&#34;,&#34;EVI&#34;,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],&#34;EVI&#34;,{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;hideGroup&#34;,&#34;args&#34;:[null]}],&#34;setView&#34;:[[30.7050175238026,76.9299999999991],12,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find(&#39;#&#39; + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement(&#39;div&#39;));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass(&#39;lnlt&#39;);\n      newDiv.css({\n      &#39;position&#39;: &#39;relative&#39;,\n      &#39;bottomleft&#39;:  &#39;0px&#39;,\n      &#39;background-color&#39;: &#39;rgba(255, 255, 255, 0.7)&#39;,\n      &#39;box-shadow&#39;: &#39;0 0 2px #bbb&#39;,\n      &#39;background-clip&#39;: &#39;padding-box&#39;,\n      &#39;margin&#39;: &#39;0&#39;,\n      &#39;padding-left&#39;: &#39;5px&#39;,\n      &#39;color&#39;: &#39;#333&#39;,\n      &#39;font&#39;: &#39;9px/1.5 \&#34;Helvetica Neue\&#34;, Arial, Helvetica, sans-serif&#39;,\n      &#39;z-index&#39;: &#39;700&#39;,\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find(&#39;.lnlt&#39;);\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on(&#39;mousemove&#39;, function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                           &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                           &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                           &#39; | zoom: &#39; + map.getZoom() +\n                           &#39; | x: &#39; + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           &#39; | y: &#39; + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           &#39; | epsg: 3857 &#39; +\n                           &#39; | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs &#39;);\n      } else {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on(&#39;mouseout&#39;, function (e) {\n      var strip = document.querySelector(&#39;.lnlt&#39;);\n      if( strip !==null) strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on(&#39;preclick&#39;, function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      var txt = document.querySelector(&#39;.lnlt&#39;).textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText(&#39;\&#34;&#39; + txt + &#39;\&#34;&#39;);\n      }\n      });\n\n      }\n      ).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null},{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el,x,data){\n           var map = this;\n\n           map.on(&#39;keypress&#39;, function(e) {\n               console.log(e.originalEvent.code);\n               var key = e.originalEvent.code;\n               if (key === &#39;KeyE&#39;) {\n                   var bb = this.getBounds();\n                   var txt = JSON.stringify(bb);\n                   console.log(txt);\n\n                   setClipboardText(&#39;\\&#39;&#39; + txt + &#39;\\&#39;&#39;);\n               }\n           })\n        }).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;savi-soil-adjusted-vegetation-index&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;SAVI: Soil-adjusted Vegetation Index&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;savi &amp;lt;- img$expression(
  expression = &amp;quot;((NIR - RED) / (NIR + RED + 0.5)) * 1.5&amp;quot;,
  opt_map = list(&amp;quot;RED&amp;quot; = img$select(&amp;quot;B4&amp;quot;)$multiply(0.0001),
                 &amp;quot;NIR&amp;quot; = img$select(&amp;quot;B8&amp;quot;)$multiply(0.0001)
                 ))$rename(&amp;quot;savi&amp;quot;)

Map$centerObject(roi, 12)
Map$addLayer(savi, 
             visParams = list(min = 0, max = 0.5, 
                              palette = c(&amp;quot;brown&amp;quot;, &amp;quot;yellow&amp;quot;, &amp;quot;green&amp;quot;)),
             name = &amp;quot;SAVI&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-6&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-6&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;minZoom&#34;:1,&#34;maxZoom&#34;:52,&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}},&#34;preferCanvas&#34;:false,&#34;bounceAtZoomLimits&#34;:false,&#34;maxBounds&#34;:[[[-90,-370]],[[90,370]]]},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],[],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;addScaleBar&#34;,&#34;args&#34;:[{&#34;maxWidth&#34;:100,&#34;metric&#34;:true,&#34;imperial&#34;:true,&#34;updateWhenIdle&#34;:true,&#34;position&#34;:&#34;bottomleft&#34;}]},{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/545c4ac53c6f8a5626ce2f097f83329c-30e2af25d44a24b673fe1234f9fae0e1/tiles/{z}/{x}/{y}&#34;,&#34;SAVI&#34;,&#34;SAVI&#34;,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],&#34;SAVI&#34;,{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;hideGroup&#34;,&#34;args&#34;:[null]}],&#34;setView&#34;:[[30.7050175238026,76.9299999999991],12,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find(&#39;#&#39; + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement(&#39;div&#39;));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass(&#39;lnlt&#39;);\n      newDiv.css({\n      &#39;position&#39;: &#39;relative&#39;,\n      &#39;bottomleft&#39;:  &#39;0px&#39;,\n      &#39;background-color&#39;: &#39;rgba(255, 255, 255, 0.7)&#39;,\n      &#39;box-shadow&#39;: &#39;0 0 2px #bbb&#39;,\n      &#39;background-clip&#39;: &#39;padding-box&#39;,\n      &#39;margin&#39;: &#39;0&#39;,\n      &#39;padding-left&#39;: &#39;5px&#39;,\n      &#39;color&#39;: &#39;#333&#39;,\n      &#39;font&#39;: &#39;9px/1.5 \&#34;Helvetica Neue\&#34;, Arial, Helvetica, sans-serif&#39;,\n      &#39;z-index&#39;: &#39;700&#39;,\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find(&#39;.lnlt&#39;);\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on(&#39;mousemove&#39;, function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                           &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                           &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                           &#39; | zoom: &#39; + map.getZoom() +\n                           &#39; | x: &#39; + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           &#39; | y: &#39; + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           &#39; | epsg: 3857 &#39; +\n                           &#39; | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs &#39;);\n      } else {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on(&#39;mouseout&#39;, function (e) {\n      var strip = document.querySelector(&#39;.lnlt&#39;);\n      if( strip !==null) strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on(&#39;preclick&#39;, function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      var txt = document.querySelector(&#39;.lnlt&#39;).textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText(&#39;\&#34;&#39; + txt + &#39;\&#34;&#39;);\n      }\n      });\n\n      }\n      ).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null},{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el,x,data){\n           var map = this;\n\n           map.on(&#39;keypress&#39;, function(e) {\n               console.log(e.originalEvent.code);\n               var key = e.originalEvent.code;\n               if (key === &#39;KeyE&#39;) {\n                   var bb = this.getBounds();\n                   var txt = JSON.stringify(bb);\n                   console.log(txt);\n\n                   setClipboardText(&#39;\\&#39;&#39; + txt + &#39;\\&#39;&#39;);\n               }\n           })\n        }).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;water-bodies&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Water bodies&lt;/h3&gt;
&lt;div id=&#34;nbrndwi-normalized-burn-ratio-normalized-difference-water-index&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;NBR/NDWI: Normalized Burn Ratio / Normalized Difference Water Index&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ndwi &amp;lt;- img$expression(
  expression = &amp;quot;(NIR - SWIR) / (NIR + SWIR)&amp;quot;,
  opt_map = list(&amp;quot;NIR&amp;quot; = img$select(&amp;quot;B8&amp;quot;),
                 &amp;quot;SWIR&amp;quot; = img$select(&amp;quot;B12&amp;quot;)
                 ))$rename(&amp;quot;ndwi&amp;quot;)

Map$centerObject(roi, 12)
Map$addLayer(ndwi, 
             visParams = list(min = 0, max = 0.5, 
                              palette = c(&amp;quot;blue&amp;quot;, &amp;quot;white&amp;quot;, &amp;quot;green&amp;quot;)),
             name = &amp;quot;NDWI&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-7&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-7&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;minZoom&#34;:1,&#34;maxZoom&#34;:52,&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}},&#34;preferCanvas&#34;:false,&#34;bounceAtZoomLimits&#34;:false,&#34;maxBounds&#34;:[[[-90,-370]],[[90,370]]]},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],[],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;addScaleBar&#34;,&#34;args&#34;:[{&#34;maxWidth&#34;:100,&#34;metric&#34;:true,&#34;imperial&#34;:true,&#34;updateWhenIdle&#34;:true,&#34;position&#34;:&#34;bottomleft&#34;}]},{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/32e721842470f6ac0dd0384a2d0b523e-5667980f726ef4fe2863b1bae37e29a4/tiles/{z}/{x}/{y}&#34;,&#34;NDWI&#34;,&#34;NDWI&#34;,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],&#34;NDWI&#34;,{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;hideGroup&#34;,&#34;args&#34;:[null]}],&#34;setView&#34;:[[30.7050175238026,76.9299999999991],12,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find(&#39;#&#39; + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement(&#39;div&#39;));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass(&#39;lnlt&#39;);\n      newDiv.css({\n      &#39;position&#39;: &#39;relative&#39;,\n      &#39;bottomleft&#39;:  &#39;0px&#39;,\n      &#39;background-color&#39;: &#39;rgba(255, 255, 255, 0.7)&#39;,\n      &#39;box-shadow&#39;: &#39;0 0 2px #bbb&#39;,\n      &#39;background-clip&#39;: &#39;padding-box&#39;,\n      &#39;margin&#39;: &#39;0&#39;,\n      &#39;padding-left&#39;: &#39;5px&#39;,\n      &#39;color&#39;: &#39;#333&#39;,\n      &#39;font&#39;: &#39;9px/1.5 \&#34;Helvetica Neue\&#34;, Arial, Helvetica, sans-serif&#39;,\n      &#39;z-index&#39;: &#39;700&#39;,\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find(&#39;.lnlt&#39;);\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on(&#39;mousemove&#39;, function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                           &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                           &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                           &#39; | zoom: &#39; + map.getZoom() +\n                           &#39; | x: &#39; + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           &#39; | y: &#39; + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           &#39; | epsg: 3857 &#39; +\n                           &#39; | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs &#39;);\n      } else {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on(&#39;mouseout&#39;, function (e) {\n      var strip = document.querySelector(&#39;.lnlt&#39;);\n      if( strip !==null) strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on(&#39;preclick&#39;, function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      var txt = document.querySelector(&#39;.lnlt&#39;).textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText(&#39;\&#34;&#39; + txt + &#39;\&#34;&#39;);\n      }\n      });\n\n      }\n      ).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null},{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el,x,data){\n           var map = this;\n\n           map.on(&#39;keypress&#39;, function(e) {\n               console.log(e.originalEvent.code);\n               var key = e.originalEvent.code;\n               if (key === &#39;KeyE&#39;) {\n                   var bb = this.getBounds();\n                   var txt = JSON.stringify(bb);\n                   console.log(txt);\n\n                   setClipboardText(&#39;\\&#39;&#39; + txt + &#39;\\&#39;&#39;);\n               }\n           })\n        }).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;mndwi-modified-normalized-difference-water-index&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;MNDWI: Modified Normalized Difference Water Index&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mndwi &amp;lt;- img$expression(
  expression = &amp;quot;(GREEN - SWIR1) / (GREEN + SWIR1)&amp;quot;,
  opt_map = list(&amp;quot;GREEN&amp;quot; = img$select(&amp;quot;B3&amp;quot;),
                 &amp;quot;SWIR1&amp;quot; = img$select(&amp;quot;B11&amp;quot;)
                 ))$rename(&amp;quot;mndwi&amp;quot;)

Map$centerObject(roi, 12)
Map$addLayer(ndwi, 
             visParams = list(min = 0, max = 0.5, 
                              palette = c(&amp;quot;blue&amp;quot;, &amp;quot;white&amp;quot;, &amp;quot;green&amp;quot;)),
             name = &amp;quot;MNDWI&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-8&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-8&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;minZoom&#34;:1,&#34;maxZoom&#34;:52,&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}},&#34;preferCanvas&#34;:false,&#34;bounceAtZoomLimits&#34;:false,&#34;maxBounds&#34;:[[[-90,-370]],[[90,370]]]},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],[],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;addScaleBar&#34;,&#34;args&#34;:[{&#34;maxWidth&#34;:100,&#34;metric&#34;:true,&#34;imperial&#34;:true,&#34;updateWhenIdle&#34;:true,&#34;position&#34;:&#34;bottomleft&#34;}]},{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/32e721842470f6ac0dd0384a2d0b523e-887b1f9b4f5fb7bcbe08d8f00b8e9863/tiles/{z}/{x}/{y}&#34;,&#34;MNDWI&#34;,&#34;MNDWI&#34;,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],&#34;MNDWI&#34;,{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;hideGroup&#34;,&#34;args&#34;:[null]}],&#34;setView&#34;:[[30.7050175238026,76.9299999999991],12,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find(&#39;#&#39; + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement(&#39;div&#39;));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass(&#39;lnlt&#39;);\n      newDiv.css({\n      &#39;position&#39;: &#39;relative&#39;,\n      &#39;bottomleft&#39;:  &#39;0px&#39;,\n      &#39;background-color&#39;: &#39;rgba(255, 255, 255, 0.7)&#39;,\n      &#39;box-shadow&#39;: &#39;0 0 2px #bbb&#39;,\n      &#39;background-clip&#39;: &#39;padding-box&#39;,\n      &#39;margin&#39;: &#39;0&#39;,\n      &#39;padding-left&#39;: &#39;5px&#39;,\n      &#39;color&#39;: &#39;#333&#39;,\n      &#39;font&#39;: &#39;9px/1.5 \&#34;Helvetica Neue\&#34;, Arial, Helvetica, sans-serif&#39;,\n      &#39;z-index&#39;: &#39;700&#39;,\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find(&#39;.lnlt&#39;);\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on(&#39;mousemove&#39;, function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                           &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                           &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                           &#39; | zoom: &#39; + map.getZoom() +\n                           &#39; | x: &#39; + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           &#39; | y: &#39; + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           &#39; | epsg: 3857 &#39; +\n                           &#39; | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs &#39;);\n      } else {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on(&#39;mouseout&#39;, function (e) {\n      var strip = document.querySelector(&#39;.lnlt&#39;);\n      if( strip !==null) strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on(&#39;preclick&#39;, function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      var txt = document.querySelector(&#39;.lnlt&#39;).textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText(&#39;\&#34;&#39; + txt + &#39;\&#34;&#39;);\n      }\n      });\n\n      }\n      ).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null},{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el,x,data){\n           var map = this;\n\n           map.on(&#39;keypress&#39;, function(e) {\n               console.log(e.originalEvent.code);\n               var key = e.originalEvent.code;\n               if (key === &#39;KeyE&#39;) {\n                   var bb = this.getBounds();\n                   var txt = JSON.stringify(bb);\n                   console.log(txt);\n\n                   setClipboardText(&#39;\\&#39;&#39; + txt + &#39;\\&#39;&#39;);\n               }\n           })\n        }).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;awei_sh-automated-water-extraction-index---shadow&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;AWEI_sh: Automated Water Extraction Index - shadow&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;aweish &amp;lt;- img$expression(
  expression = &amp;quot;BLUE + 2.5 * GREEN - 1.5 * (NIR + SWIR1) - 0.25 * SWIR2&amp;quot;,
  opt_map = list(&amp;quot;BLUE&amp;quot; = img$select(&amp;quot;B2&amp;quot;),
                 &amp;quot;GREEN&amp;quot; = img$select(&amp;quot;B3&amp;quot;),
                 &amp;quot;NIR&amp;quot; = img$select(&amp;quot;B8&amp;quot;),
                 &amp;quot;SWIR1&amp;quot; = img$select(&amp;quot;B11&amp;quot;),
                 &amp;quot;SWIR2&amp;quot; = img$select(&amp;quot;B12&amp;quot;)
                 ))$rename(&amp;quot;aweish&amp;quot;)

Map$centerObject(roi, 12)
Map$addLayer(aweish, 
             visParams = list(min = 0, max = 1, palette = c(&amp;quot;white&amp;quot;, &amp;quot;blue&amp;quot;)),
             name = &amp;quot;AWEIsh&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-9&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-9&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;minZoom&#34;:1,&#34;maxZoom&#34;:52,&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}},&#34;preferCanvas&#34;:false,&#34;bounceAtZoomLimits&#34;:false,&#34;maxBounds&#34;:[[[-90,-370]],[[90,370]]]},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],[],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;addScaleBar&#34;,&#34;args&#34;:[{&#34;maxWidth&#34;:100,&#34;metric&#34;:true,&#34;imperial&#34;:true,&#34;updateWhenIdle&#34;:true,&#34;position&#34;:&#34;bottomleft&#34;}]},{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/fca4b3bb582dd971db119f8ab1e3c16e-0e1a2783aa12cadc34e6479fcaa58208/tiles/{z}/{x}/{y}&#34;,&#34;AWEIsh&#34;,&#34;AWEIsh&#34;,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],&#34;AWEIsh&#34;,{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;hideGroup&#34;,&#34;args&#34;:[null]}],&#34;setView&#34;:[[30.7050175238026,76.9299999999991],12,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find(&#39;#&#39; + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement(&#39;div&#39;));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass(&#39;lnlt&#39;);\n      newDiv.css({\n      &#39;position&#39;: &#39;relative&#39;,\n      &#39;bottomleft&#39;:  &#39;0px&#39;,\n      &#39;background-color&#39;: &#39;rgba(255, 255, 255, 0.7)&#39;,\n      &#39;box-shadow&#39;: &#39;0 0 2px #bbb&#39;,\n      &#39;background-clip&#39;: &#39;padding-box&#39;,\n      &#39;margin&#39;: &#39;0&#39;,\n      &#39;padding-left&#39;: &#39;5px&#39;,\n      &#39;color&#39;: &#39;#333&#39;,\n      &#39;font&#39;: &#39;9px/1.5 \&#34;Helvetica Neue\&#34;, Arial, Helvetica, sans-serif&#39;,\n      &#39;z-index&#39;: &#39;700&#39;,\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find(&#39;.lnlt&#39;);\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on(&#39;mousemove&#39;, function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                           &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                           &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                           &#39; | zoom: &#39; + map.getZoom() +\n                           &#39; | x: &#39; + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           &#39; | y: &#39; + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           &#39; | epsg: 3857 &#39; +\n                           &#39; | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs &#39;);\n      } else {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on(&#39;mouseout&#39;, function (e) {\n      var strip = document.querySelector(&#39;.lnlt&#39;);\n      if( strip !==null) strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on(&#39;preclick&#39;, function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      var txt = document.querySelector(&#39;.lnlt&#39;).textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText(&#39;\&#34;&#39; + txt + &#39;\&#34;&#39;);\n      }\n      });\n\n      }\n      ).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null},{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el,x,data){\n           var map = this;\n\n           map.on(&#39;keypress&#39;, function(e) {\n               console.log(e.originalEvent.code);\n               var key = e.originalEvent.code;\n               if (key === &#39;KeyE&#39;) {\n                   var bb = this.getBounds();\n                   var txt = JSON.stringify(bb);\n                   console.log(txt);\n\n                   setClipboardText(&#39;\\&#39;&#39; + txt + &#39;\\&#39;&#39;);\n               }\n           })\n        }).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;built-up-areas&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Built up areas&lt;/h3&gt;
&lt;div id=&#34;ndbi-normalized-difference-built-up-index&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;NDBI: Normalized Difference Built-up Index&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ndbi &amp;lt;- img$expression(
  expression = &amp;quot;(SWIR1 - NIR) / (SWIR1 + NIR)&amp;quot;,
  opt_map = list(&amp;quot;NIR&amp;quot; = img$select(&amp;quot;B8&amp;quot;),
                 &amp;quot;SWIR1&amp;quot; = img$select(&amp;quot;B11&amp;quot;)
                 ))$rename(&amp;quot;ndbi&amp;quot;)

Map$centerObject(roi, 12)
Map$addLayer(ndbi, 
             visParams = list(min = -1, max = 1, palette = c(&amp;quot;white&amp;quot;, &amp;quot;brown&amp;quot;)),
             name = &amp;quot;NDBI&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-10&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-10&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;minZoom&#34;:1,&#34;maxZoom&#34;:52,&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}},&#34;preferCanvas&#34;:false,&#34;bounceAtZoomLimits&#34;:false,&#34;maxBounds&#34;:[[[-90,-370]],[[90,370]]]},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],[],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;addScaleBar&#34;,&#34;args&#34;:[{&#34;maxWidth&#34;:100,&#34;metric&#34;:true,&#34;imperial&#34;:true,&#34;updateWhenIdle&#34;:true,&#34;position&#34;:&#34;bottomleft&#34;}]},{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/f140b517032165c738455f7d0cfcaf6d-800bfee0fede3c6f49791fdde332218b/tiles/{z}/{x}/{y}&#34;,&#34;NDBI&#34;,&#34;NDBI&#34;,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],&#34;NDBI&#34;,{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;hideGroup&#34;,&#34;args&#34;:[null]}],&#34;setView&#34;:[[30.7050175238026,76.9299999999991],12,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find(&#39;#&#39; + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement(&#39;div&#39;));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass(&#39;lnlt&#39;);\n      newDiv.css({\n      &#39;position&#39;: &#39;relative&#39;,\n      &#39;bottomleft&#39;:  &#39;0px&#39;,\n      &#39;background-color&#39;: &#39;rgba(255, 255, 255, 0.7)&#39;,\n      &#39;box-shadow&#39;: &#39;0 0 2px #bbb&#39;,\n      &#39;background-clip&#39;: &#39;padding-box&#39;,\n      &#39;margin&#39;: &#39;0&#39;,\n      &#39;padding-left&#39;: &#39;5px&#39;,\n      &#39;color&#39;: &#39;#333&#39;,\n      &#39;font&#39;: &#39;9px/1.5 \&#34;Helvetica Neue\&#34;, Arial, Helvetica, sans-serif&#39;,\n      &#39;z-index&#39;: &#39;700&#39;,\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find(&#39;.lnlt&#39;);\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on(&#39;mousemove&#39;, function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                           &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                           &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                           &#39; | zoom: &#39; + map.getZoom() +\n                           &#39; | x: &#39; + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           &#39; | y: &#39; + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           &#39; | epsg: 3857 &#39; +\n                           &#39; | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs &#39;);\n      } else {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on(&#39;mouseout&#39;, function (e) {\n      var strip = document.querySelector(&#39;.lnlt&#39;);\n      if( strip !==null) strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on(&#39;preclick&#39;, function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      var txt = document.querySelector(&#39;.lnlt&#39;).textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText(&#39;\&#34;&#39; + txt + &#39;\&#34;&#39;);\n      }\n      });\n\n      }\n      ).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null},{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el,x,data){\n           var map = this;\n\n           map.on(&#39;keypress&#39;, function(e) {\n               console.log(e.originalEvent.code);\n               var key = e.originalEvent.code;\n               if (key === &#39;KeyE&#39;) {\n                   var bb = this.getBounds();\n                   var txt = JSON.stringify(bb);\n                   console.log(txt);\n\n                   setClipboardText(&#39;\\&#39;&#39; + txt + &#39;\\&#39;&#39;);\n               }\n           })\n        }).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;bui-built-up-index&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;BUI: Built-up Index&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bui &amp;lt;- img$expression(
  expression = &amp;quot;((SWIR1 - NIR) / (SWIR1 + NIR)) - ((NIR - RED)/(NIR + RED))&amp;quot;,
  opt_map = list(&amp;quot;RED&amp;quot; = img$select(&amp;quot;B4&amp;quot;),
                 &amp;quot;NIR&amp;quot; = img$select(&amp;quot;B8&amp;quot;),
                 &amp;quot;SWIR1&amp;quot; = img$select(&amp;quot;B11&amp;quot;)
                 ))$rename(&amp;quot;bui&amp;quot;)


Map$centerObject(roi, 12)
Map$addLayer(bui, 
             visParams = list(min = -1, max = 0.5, palette = c(&amp;quot;green&amp;quot;, &amp;quot;white&amp;quot;, &amp;quot;brown&amp;quot;)),
             name = &amp;quot;BUI&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-11&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-11&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;minZoom&#34;:1,&#34;maxZoom&#34;:52,&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}},&#34;preferCanvas&#34;:false,&#34;bounceAtZoomLimits&#34;:false,&#34;maxBounds&#34;:[[[-90,-370]],[[90,370]]]},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],[],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;addScaleBar&#34;,&#34;args&#34;:[{&#34;maxWidth&#34;:100,&#34;metric&#34;:true,&#34;imperial&#34;:true,&#34;updateWhenIdle&#34;:true,&#34;position&#34;:&#34;bottomleft&#34;}]},{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/4cf3b6017b4a193c3db916bd4c2e1a97-7ca7a47d1a16cd1464086de86b38598a/tiles/{z}/{x}/{y}&#34;,&#34;BUI&#34;,&#34;BUI&#34;,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],&#34;BUI&#34;,{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;hideGroup&#34;,&#34;args&#34;:[null]}],&#34;setView&#34;:[[30.7050175238026,76.9299999999991],12,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find(&#39;#&#39; + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement(&#39;div&#39;));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass(&#39;lnlt&#39;);\n      newDiv.css({\n      &#39;position&#39;: &#39;relative&#39;,\n      &#39;bottomleft&#39;:  &#39;0px&#39;,\n      &#39;background-color&#39;: &#39;rgba(255, 255, 255, 0.7)&#39;,\n      &#39;box-shadow&#39;: &#39;0 0 2px #bbb&#39;,\n      &#39;background-clip&#39;: &#39;padding-box&#39;,\n      &#39;margin&#39;: &#39;0&#39;,\n      &#39;padding-left&#39;: &#39;5px&#39;,\n      &#39;color&#39;: &#39;#333&#39;,\n      &#39;font&#39;: &#39;9px/1.5 \&#34;Helvetica Neue\&#34;, Arial, Helvetica, sans-serif&#39;,\n      &#39;z-index&#39;: &#39;700&#39;,\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find(&#39;.lnlt&#39;);\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on(&#39;mousemove&#39;, function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                           &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                           &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                           &#39; | zoom: &#39; + map.getZoom() +\n                           &#39; | x: &#39; + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           &#39; | y: &#39; + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           &#39; | epsg: 3857 &#39; +\n                           &#39; | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs &#39;);\n      } else {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on(&#39;mouseout&#39;, function (e) {\n      var strip = document.querySelector(&#39;.lnlt&#39;);\n      if( strip !==null) strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on(&#39;preclick&#39;, function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      var txt = document.querySelector(&#39;.lnlt&#39;).textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText(&#39;\&#34;&#39; + txt + &#39;\&#34;&#39;);\n      }\n      });\n\n      }\n      ).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null},{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el,x,data){\n           var map = this;\n\n           map.on(&#39;keypress&#39;, function(e) {\n               console.log(e.originalEvent.code);\n               var key = e.originalEvent.code;\n               if (key === &#39;KeyE&#39;) {\n                   var bb = this.getBounds();\n                   var txt = JSON.stringify(bb);\n                   console.log(txt);\n\n                   setClipboardText(&#39;\\&#39;&#39; + txt + &#39;\\&#39;&#39;);\n               }\n           })\n        }).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;soil-related-indices&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Soil related Indices&lt;/h3&gt;
&lt;div id=&#34;ndti-normalized-difference-tillage-index&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;NDTI: Normalized Difference Tillage Index&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ndti &amp;lt;- img$expression(
  expression = &amp;quot;(SWIR1 - SWIR2) / (SWIR1 + SWIR2)&amp;quot;,
  opt_map = list(&amp;quot;SWIR1&amp;quot; = img$select(&amp;quot;B11&amp;quot;),
                 &amp;quot;SWIR2&amp;quot; = img$select(&amp;quot;B12&amp;quot;)
                 ))$rename(&amp;quot;ndti&amp;quot;)

Map$centerObject(roi, 12)
Map$addLayer(ndti, 
             visParams = list(min = 0, max = 0.5, palette = c(&amp;quot;brown&amp;quot;, &amp;quot;yellow&amp;quot;, &amp;quot;green&amp;quot;)),
             name = &amp;quot;NDTI&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-12&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-12&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;minZoom&#34;:1,&#34;maxZoom&#34;:52,&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}},&#34;preferCanvas&#34;:false,&#34;bounceAtZoomLimits&#34;:false,&#34;maxBounds&#34;:[[[-90,-370]],[[90,370]]]},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],[],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;addScaleBar&#34;,&#34;args&#34;:[{&#34;maxWidth&#34;:100,&#34;metric&#34;:true,&#34;imperial&#34;:true,&#34;updateWhenIdle&#34;:true,&#34;position&#34;:&#34;bottomleft&#34;}]},{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/c17e28f41f3c94ef98c5792abb86ce22-14245260b5a75738394dfb3d500c0a78/tiles/{z}/{x}/{y}&#34;,&#34;NDTI&#34;,&#34;NDTI&#34;,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],&#34;NDTI&#34;,{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;hideGroup&#34;,&#34;args&#34;:[null]}],&#34;setView&#34;:[[30.7050175238026,76.9299999999991],12,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find(&#39;#&#39; + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement(&#39;div&#39;));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass(&#39;lnlt&#39;);\n      newDiv.css({\n      &#39;position&#39;: &#39;relative&#39;,\n      &#39;bottomleft&#39;:  &#39;0px&#39;,\n      &#39;background-color&#39;: &#39;rgba(255, 255, 255, 0.7)&#39;,\n      &#39;box-shadow&#39;: &#39;0 0 2px #bbb&#39;,\n      &#39;background-clip&#39;: &#39;padding-box&#39;,\n      &#39;margin&#39;: &#39;0&#39;,\n      &#39;padding-left&#39;: &#39;5px&#39;,\n      &#39;color&#39;: &#39;#333&#39;,\n      &#39;font&#39;: &#39;9px/1.5 \&#34;Helvetica Neue\&#34;, Arial, Helvetica, sans-serif&#39;,\n      &#39;z-index&#39;: &#39;700&#39;,\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find(&#39;.lnlt&#39;);\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on(&#39;mousemove&#39;, function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                           &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                           &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                           &#39; | zoom: &#39; + map.getZoom() +\n                           &#39; | x: &#39; + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           &#39; | y: &#39; + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           &#39; | epsg: 3857 &#39; +\n                           &#39; | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs &#39;);\n      } else {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on(&#39;mouseout&#39;, function (e) {\n      var strip = document.querySelector(&#39;.lnlt&#39;);\n      if( strip !==null) strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on(&#39;preclick&#39;, function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      var txt = document.querySelector(&#39;.lnlt&#39;).textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText(&#39;\&#34;&#39; + txt + &#39;\&#34;&#39;);\n      }\n      });\n\n      }\n      ).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null},{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el,x,data){\n           var map = this;\n\n           map.on(&#39;keypress&#39;, function(e) {\n               console.log(e.originalEvent.code);\n               var key = e.originalEvent.code;\n               if (key === &#39;KeyE&#39;) {\n                   var bb = this.getBounds();\n                   var txt = JSON.stringify(bb);\n                   console.log(txt);\n\n                   setClipboardText(&#39;\\&#39;&#39; + txt + &#39;\\&#39;&#39;);\n               }\n           })\n        }).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;bsi-bare-soil-index&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;BSI: Bare Soil Index&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bsi &amp;lt;- img$expression(
  expression = &amp;quot;(((SWIR1 + RED) - (NIR + BLUE)) / (SWIR1 + RED)) + (NIR + BLUE)&amp;quot;,
  opt_map = list(&amp;quot;BLUE&amp;quot; = img$select(&amp;quot;B2&amp;quot;),
                 &amp;quot;RED&amp;quot; = img$select(&amp;quot;B4&amp;quot;),
                 &amp;quot;NIR&amp;quot; = img$select(&amp;quot;B8&amp;quot;),
                 &amp;quot;SWIR1&amp;quot; = img$select(&amp;quot;B11&amp;quot;),
                 &amp;quot;SWIR2&amp;quot; = img$select(&amp;quot;B12&amp;quot;)
                 ))$rename(&amp;quot;bsi&amp;quot;)

Map$centerObject(roi, 12)
Map$addLayer(bsi, 
             visParams = list(min = 1000, max = 4000, palette = c(&amp;quot;white&amp;quot;, &amp;quot;brown&amp;quot;)),
             name = &amp;quot;BSI&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-13&#34; style=&#34;width:90%;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-13&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;minZoom&#34;:1,&#34;maxZoom&#34;:52,&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}},&#34;preferCanvas&#34;:false,&#34;bounceAtZoomLimits&#34;:false,&#34;maxBounds&#34;:[[[-90,-370]],[[90,370]]]},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,&#34;CartoDB.Positron&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,&#34;OpenStreetMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;CartoDB.DarkMatter&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,&#34;Esri.WorldImagery&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,&#34;OpenTopoMap&#34;,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false,&#34;pane&#34;:&#34;tilePane&#34;}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],[],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;addScaleBar&#34;,&#34;args&#34;:[{&#34;maxWidth&#34;:100,&#34;metric&#34;:true,&#34;imperial&#34;:true,&#34;updateWhenIdle&#34;:true,&#34;position&#34;:&#34;bottomleft&#34;}]},{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/2464f8f4b656c4bd5e5eba6d2a3112fd-6472a8a1b507d0189292e5bae9e4693b/tiles/{z}/{x}/{y}&#34;,&#34;BSI&#34;,&#34;BSI&#34;,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[&#34;CartoDB.Positron&#34;,&#34;OpenStreetMap&#34;,&#34;CartoDB.DarkMatter&#34;,&#34;Esri.WorldImagery&#34;,&#34;OpenTopoMap&#34;],&#34;BSI&#34;,{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topleft&#34;}]},{&#34;method&#34;:&#34;hideGroup&#34;,&#34;args&#34;:[null]}],&#34;setView&#34;:[[30.7050175238026,76.9299999999991],12,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find(&#39;#&#39; + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement(&#39;div&#39;));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass(&#39;lnlt&#39;);\n      newDiv.css({\n      &#39;position&#39;: &#39;relative&#39;,\n      &#39;bottomleft&#39;:  &#39;0px&#39;,\n      &#39;background-color&#39;: &#39;rgba(255, 255, 255, 0.7)&#39;,\n      &#39;box-shadow&#39;: &#39;0 0 2px #bbb&#39;,\n      &#39;background-clip&#39;: &#39;padding-box&#39;,\n      &#39;margin&#39;: &#39;0&#39;,\n      &#39;padding-left&#39;: &#39;5px&#39;,\n      &#39;color&#39;: &#39;#333&#39;,\n      &#39;font&#39;: &#39;9px/1.5 \&#34;Helvetica Neue\&#34;, Arial, Helvetica, sans-serif&#39;,\n      &#39;z-index&#39;: &#39;700&#39;,\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find(&#39;.lnlt&#39;);\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on(&#39;mousemove&#39;, function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                           &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                           &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                           &#39; | zoom: &#39; + map.getZoom() +\n                           &#39; | x: &#39; + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           &#39; | y: &#39; + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           &#39; | epsg: 3857 &#39; +\n                           &#39; | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs &#39;);\n      } else {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on(&#39;mouseout&#39;, function (e) {\n      var strip = document.querySelector(&#39;.lnlt&#39;);\n      if( strip !==null) strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on(&#39;preclick&#39;, function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector(&#39;.lnlt&#39;) === null) lnlt = addElement();\n      lnlt.text(\n                      &#39; lon: &#39; + (e.latlng.lng).toFixed(5) +\n                      &#39; | lat: &#39; + (e.latlng.lat).toFixed(5) +\n                      &#39; | zoom: &#39; + map.getZoom() + &#39; &#39;);\n      var txt = document.querySelector(&#39;.lnlt&#39;).textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText(&#39;\&#34;&#39; + txt + &#39;\&#34;&#39;);\n      }\n      });\n\n      }\n      ).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null},{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el,x,data){\n           var map = this;\n\n           map.on(&#39;keypress&#39;, function(e) {\n               console.log(e.originalEvent.code);\n               var key = e.originalEvent.code;\n               if (key === &#39;KeyE&#39;) {\n                   var bb = this.getBounds();\n                   var txt = JSON.stringify(bb);\n                   console.log(txt);\n\n                   setClipboardText(&#39;\\&#39;&#39; + txt + &#39;\\&#39;&#39;);\n               }\n           })\n        }).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level2 unnumbered&#34;&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;div id=&#34;refs&#34; class=&#34;references csl-bib-body hanging-indent&#34;&gt;
&lt;div id=&#34;ref-R-rgee&#34; class=&#34;csl-entry&#34;&gt;
Aybar, Cesar. 2021. &lt;em&gt;Rgee: R Bindings for Calling the Earth Engine API&lt;/em&gt;. &lt;a href=&#34;https://CRAN.R-project.org/package=rgee&#34;&gt;https://CRAN.R-project.org/package=rgee&lt;/a&gt;.
&lt;/div&gt;
&lt;div id=&#34;ref-rgee2020&#34; class=&#34;csl-entry&#34;&gt;
Aybar, Cesar, Qiusheng Wu, Lesly Bautista, Roy Yali, and Antony Barja. 2020. &lt;span&gt;â&lt;span class=&#34;nocase&#34;&gt;rgee&lt;/span&gt;: An &lt;span&gt;R&lt;/span&gt; Package for Interacting with Google Earth Engineâ&lt;/span&gt; 5 (51): 2272. &lt;a href=&#34;https://doi.org/10.21105/joss.02272&#34;&gt;https://doi.org/10.21105/joss.02272&lt;/a&gt;.
&lt;/div&gt;
&lt;div id=&#34;ref-Gorelick2017&#34; class=&#34;csl-entry&#34;&gt;
Gorelick, Noel, Matt Hancher, Mike Dixon, Simon Ilyushchenko, David Thau, and Rebecca Moore. 2017. &lt;span&gt;âGoogle Earth Engine: Planetary-Scale Geospatial Analysis for Everyoneâ&lt;/span&gt; 202 (December): 18â27. &lt;a href=&#34;https://doi.org/10.1016/j.rse.2017.06.031&#34;&gt;https://doi.org/10.1016/j.rse.2017.06.031&lt;/a&gt;.
&lt;/div&gt;
&lt;div id=&#34;ref-R-base&#34; class=&#34;csl-entry&#34;&gt;
R Core Team. 2021. &lt;em&gt;R: A Language and Environment for Statistical Computing&lt;/em&gt;. Vienna, Austria: R Foundation for Statistical Computing. &lt;a href=&#34;https://www.R-project.org/&#34;&gt;https://www.R-project.org/&lt;/a&gt;.
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>https://akumar.netlify.app/post/2020-12-01-r-rmarkdown/</link>
      <pubDate>Tue, 01 Dec 2020 21:13:14 -0500</pubDate>
      <guid>https://akumar.netlify.app/post/2020-12-01-r-rmarkdown/</guid>
      <description>
&lt;script src=&#34;https://akumar.netlify.app/post/2020-12-01-r-rmarkdown/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span style=&#34;display:block;&#34; id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://akumar.netlify.app/post/2020-12-01-r-rmarkdown/index.en_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
